{"version":3,"sources":["components/Menu/Menu.js","components/GameHeader/GameHeader.js","components/GameSidebar/GameSidebar.js","components/Info/Info.js","components/GoogleMapWrapper/GoogleMapWrapper.js","components/EndGame/EndGame.js","components/GameMain/GameMain.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Menu","className","to","Component","GameHeader","counter","this","props","actCity","actPoints","GameSidebar","nextProps","nextContext","gameState","class","Info","cityName","distance","timeBonus","points","style","width","height","border","borderRadius","GoogleMapWrapper","state","mapDrawState","setState","drawClickedPlaceMarker","drawCityMarker","drawLine","position","randCityMarker","icon","url","clickedCityMarker","path","polyline","options","strokeColor","strokeOpacity","strokeWeight","icons","offset","repeat","styles","mapTypeControl","streetViewControl","fullscreenControl","zoomControl","panControl","scrollwheel","gestureHandling","google","initialCenter","lat","lng","zoom","onClick","handleClick","GoogleApiWrapper","apiKey","EndGame","score","cities","name","GameMain","city","time","play","mapClicked","mapProps","map","clickEvent","clickTime","Date","getTime","playerTime","clickedPlaceLat","latLng","clickedPlaceLng","Math","floor","lat1","lon1","lat2","lon2","p","c","cos","a","asin","sqrt","bonus","prevCityName","prevCityLat","prevCityLng","Timeout","setTimeout","targets","length","clearTimeout","citiesArr","range","randomCities","i","index","ceil","random","newArr","filter","el","push","getRandomCity","startTime","console","log","info","randCityCoordinates","clickedCityCoordinates","pathCoordinates","App","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4b4a9def.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport './Menu.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass Menu extends Component{\r\n    render(){\r\n        return(<>\r\n            <section className=\"container menuBackground\">\r\n                <div className=\"row\">\r\n                    <div className=\"main col-6\"></div>\r\n                    <div className=\"main col-6\">\r\n                        <div className='menu'>\r\n                            <h1>Quiz</h1>\r\n                            <h2>Wskaż miasta</h2>\r\n                            <p>W lewym górnym rogu losowane są miasta, Twoim zadaniem jest kliknięcię na mape\r\n                            w miejsce w którym to miasto się znajduje. Im bliżej tym więcej punktów,\r\n                                dodatkowo przyznawane sa bonusowe punkty za czas!\r\n                            </p>\r\n                            <NavLink to=\"/GameMain/\" ><button>Start</button></NavLink>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"main col-6\"></div>\r\n                </div>\r\n            </section>\r\n        </>)\r\n    }\r\n}\r\n\r\nexport default Menu","import React,{Component} from 'react';\r\nimport './GameHeader.scss';\r\n\r\n\r\nclass GameHeader extends Component{\r\n    render(){\r\n        let counter;\r\n        if(this.props.actCity){\r\n            counter=<span>{this.props.counter+1}/10</span>\r\n        }\r\n        else{\r\n            counter=null;\r\n        }\r\n        return(<>\r\n            <h1>{counter} {this.props.actCity}</h1>\r\n            <h2>{this.props.actPoints}</h2>\r\n        </>)\r\n    }\r\n}\r\n\r\nexport default GameHeader\r\n\r\n","import React,{Component} from 'react';\r\nimport \"./GameSidebar.scss\";\r\n\r\nclass GameSidebar extends Component{\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        if(nextProps.gameState===0){\r\n            this.class=''\r\n        }\r\n        else{\r\n            this.class='progress-bar'\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (<div className={this.class} ></div>);\r\n    }\r\n}\r\n\r\nexport default GameSidebar","import React,{Component} from 'react';\r\nimport './Info.scss';\r\n\r\nclass Info extends Component{\r\n    render(){\r\n        return(<>\r\n            <div className='info'>\r\n                <h1>{this.props.cityName}</h1>\r\n                <p className='distance'><span>{this.props.distance}km</span> od celu</p>\r\n                <p className='time'>bonus: {this.props.timeBonus} pts</p>\r\n                <h2>{this.props.points}pts</h2>\r\n            </div>\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default Info","import React,{Component} from 'react';\r\nimport {Map, InfoWindow, Marker, GoogleApiWrapper,Polyline} from 'google-maps-react';\r\nimport './GoogleMapWrapper.scss';\r\n\r\n\r\n\r\nconst style = {\r\n    width: '59.5rem',\r\n    height: '30rem',\r\n    border: '1px solid gold',\r\n    borderRadius:'10px'\r\n};\r\n\r\nclass GoogleMapWrapper extends Component{\r\n    state={\r\n        mapDrawState:0\r\n    };\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        if(nextProps.gameState===0) {\r\n            this.setState({mapDrawState: 1});\r\n        }else{\r\n            this.setState({mapDrawState:0})\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let drawClickedPlaceMarker,drawCityMarker,drawLine;\r\n        if(this.state.mapDrawState===1){\r\n            drawClickedPlaceMarker=<Marker position={this.props.randCityMarker} icon={{url: \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\"}}/>;\r\n            drawCityMarker=<Marker position={this.props.clickedCityMarker} icon={{url: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"}}/>;\r\n            drawLine=<Polyline path={this.props.polyline} options={{strokeColor: '#00ffff', strokeOpacity: 1, strokeWeight: 1, icons: [{icon: \"hello\", offset: '0', repeat: '10px'}],}}/>;\r\n        }else{\r\n            drawClickedPlaceMarker=null;\r\n            drawCityMarker=null;\r\n            drawLine=null;\r\n        }\r\n            return (<>\r\n                            <Map\r\n                                styles = {[{\"featureType\":\"all\",\"elementType\":\"labels.text.fill\",\"stylers\":[{\"color\":\"#ffffff\"}]},\r\n                                    {\"featureType\":\"all\",\"elementType\":\"labels.text.stroke\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":13}]},\r\n                                    {\"featureType\":\"administrative\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#000000\"}]},\r\n\r\n                                    {\"featureType\":\"administrative\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#144b53\"},{\"lightness\":14}, {\"weight\":1.4}]},\r\n                                    {\"featureType\":\"landscape\",\"elementType\":\"all\",\"stylers\":[{\"color\":\"#08304b\"}]},\r\n                                    {\"featureType\":\"poi\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#0c4152\"},{\"lightness\":5}]},\r\n                                    {\"featureType\":\"road.highway\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#000000\"}]},\r\n                                    {\"featureType\":\"road.highway\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#0b434f\"},{\"lightness\":25}]},\r\n                                    {\"featureType\":\"road.arterial\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#000000\"}]},\r\n                                    {\"featureType\":\"road.arterial\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#0b3d51\"},{\"lightness\":16}]},\r\n                                    {\"featureType\":\"road.local\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#000000\"}]},\r\n                                    {\"featureType\":\"transit\",\"elementType\":\"all\",\"stylers\":[{\"color\":\"#146474\"}]},\r\n                                    {\"featureType\":\"water\",\"elementType\":\"all\",\"stylers\":[{\"color\":\"#021019\"}]},\r\n                                    {\"elementType\": \"labels\", \"stylers\": [{\"visibility\": \"off\"}]},\r\n                                    {\"featureType\": \"administrative.neighborhood\", \"stylers\": [{\"visibility\": \"off\"}]},\r\n                                    {\"featureType\": \"road\", \"stylers\": [{\"visibility\": \"off\"}]}\r\n                                    ]}\r\n                                mapTypeControl={false}\r\n                                streetViewControl={false}\r\n                                fullscreenControl={false}\r\n                                zoomControl={false}\r\n                                panControl={false}\r\n                                scrollwheel={false}\r\n                                gestureHandling='none'\r\n                                style={style}\r\n                                google={this.props.google}\r\n                                initialCenter={{\r\n                                    lat: 51.990000, lng: 19.239267\r\n                                }}\r\n                                zoom={6.09}\r\n                                onClick={this.props.handleClick}\r\n                            >\r\n                                {drawClickedPlaceMarker}\r\n                                {drawCityMarker}\r\n                                {drawLine}\r\n                            </Map>\r\n            </>)\r\n    }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyCO6rDTp-t-B-DMEFjWlvIYW9n5mqpnUUs'\r\n})(GoogleMapWrapper)\r\n","import React,{Component} from 'react';\r\nimport \"./EndGame.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nclass EndGame extends Component {\r\n    render(){\r\n        return(\r\n            <section className=\"container summaryBackground\">\r\n                <div className=\"row\">\r\n                    <div className=\"main col-6\"></div>\r\n                    <div className=\"main col-6\">\r\n                    <div className='summary'>\r\n                        <h1>Gratulacje!</h1>\r\n                        <h2>Twój wynik to:{this.props.score}pts</h2>\r\n                        <p>Zagraj jeszcze raz!</p>\r\n                        <NavLink to=\"/\" ><button>Start</button></NavLink>\r\n                    </div>\r\n                </div>\r\n            <div className=\"main col-6\"></div>\r\n            </div>\r\n            </section>\r\n        )}\r\n}\r\n\r\nexport default EndGame;\r\n","import React,{Component} from 'react';\r\nimport './GameMain.scss';\r\nimport GameHeader from '../GameHeader/GameHeader';\r\nimport GameSidebar from '../GameSidebar/GameSidebar';\r\nimport Info from '../Info/Info';\r\nimport GoogleMapWrapper from '../GoogleMapWrapper/GoogleMapWrapper';\r\nimport EndGame from '../EndGame/EndGame';\r\n\r\nconst cities=[{name:'Września',lat:52.32512,lng:17.56519},{name:'Białystok',lat:53.13333,lng:23.16433},\r\n    {name:'Warszawa',lat:52.229676,lng:21.012229},{name:'Gdańsk',lat:54.35205,lng:18.64637},\r\n    {name:'Kraków',lat:50.0646501,lng:19.9449799},{name:'Radom',lat:51.40253,lng:21.14714},{name:'Legnica',lat:51.20701,lng:16.15532},\r\n    {name:'Łomża',lat:53.17812,lng:22.05903},{name:'Elbląg',lat:54.15606,lng:19.40449},{name:'Chełm',lat:\t51.14312,lng:23.47120},\r\n    {name:'Kalisz',lat:51.76728,lng:18.08535},{name:'Świnoujście',lat:53.91053,lng:14.24712},\r\n    {name:'Leszno',lat:51.84199,lng:16.59375},{name:'Żory',lat:50.04472,lng:18.70064},\r\n    {name:'Słupsk',lat:54.46415,lng:17.02848},{name:'Krosno',lat:49.68248,lng:21.76605},{name:'Siedlce',lat:52.16760,lng:22.29016},\r\n    {name:'Gorzów Wielkopolski',lat:52.73253,lng:15.23693},{name:'Piotrków Trybunalski',lat:51.40517,lng:19.70302},{name:'Tarnobrzeg',lat:\t50.57291,lng:21.67907},\r\n    {name:'Konin',lat:52.226139,lng:18.243139},{name:'Przemyśl',lat:49.783699,lng:22.768030},{name:'Rzeszów',lat:50.041187,lng:21.999121},{name:'Zamość',lat:50.717369,lng:23.252760},\r\n    {name:'Kielce',lat:50.869930,lng:20.640961},{name:'Ełk',lat:53.828053,lng:22.364662},{name:'Olsztyn',lat:53.775711,lng:20.477980},{name:'Suwałki',lat:54.099920,lng:22.926980},\r\n    {name:'Mrągowo',lat:53.874531,lng:21.305950},{name:'Grudziądz',lat:53.487419,lng:18.756310},{name:'Włocławek',lat:52.653160,lng:19.059940},{name:'Płock',lat:52.546345,lng:19.706535},\r\n    {name:'Częstochowa',lat:50.811817,lng:19.120310},{name:'Rybnik',lat:50.089722,lng:18.530880},{name:'Katowice',lat:50.264893,lng:19.023781},{name:'Opole',lat:50.667728,lng:17.928600},\r\n    {name:'Wałbrzych',lat:50.785290,lng:16.286930},{name:'Jelenia Góra',lat:50.904171,lng:15.735570},{name:'Zielona Góra',lat:51.936620,lng:15.508690},{name:'Piła',lat:53.151741,lng:16.742889},\r\n    {name:'Gdynia',lat:54.516842,lng:18.541941},{name:'Sopot',lat:54.441582,lng:18.560097},{name:'Kołobrzeg',lat:54.181679,lng:15.569580},{name:'Koszalin',lat:54.189949,lng:16.181030},\r\n    {name:'Szczecinek',lat:53.710979,lng:16.691111},{name:'Gniezno',lat:52.538551,lng:17.597549},{name:'Jarocin',lat:51.973759,lng:17.501551},{name:'Śrem',lat:52.086182,lng:17.018539}\r\n];\r\nconst getRandomCity=(citiesArr,range)=>{\r\n    let randomCities=[];\r\n    for(let i=0;i<range;i++) {\r\n        let index = Math.ceil(Math.random() * citiesArr.length - 1);\r\n        let newArr = citiesArr.filter((el) => {\r\n            return el !== citiesArr[index]\r\n        });\r\n        randomCities.push(citiesArr[index]);\r\n        citiesArr = newArr;\r\n    }\r\n    return randomCities;\r\n};\r\n\r\nfunction distance(lat1, lon1, lat2, lon2) {\r\n    var p = 0.017453292519943295;    // Math.PI / 180\r\n    var c = Math.cos;\r\n    var a = 0.5 - c((lat2 - lat1) * p)/2 +\r\n        c(lat1 * p) * c(lat2 * p) *\r\n        (1 - c((lon2 - lon1) * p))/2;\r\n    return 12742 * Math.asin(Math.sqrt(a)); // 2 * R; R = 6371 km\r\n}\r\n\r\nfunction bonus(time,distance) {\r\n    let bonus;\r\n    if (time>20 || distance>200) {\r\n        bonus = 0;\r\n    } else if (time <= 20 && time >= 15) {\r\n        bonus = 1000;\r\n    } else if (time < 15 && time >= 10) {\r\n        bonus = 2000;\r\n    } else if (time < 10 && time >= 5) {\r\n        bonus = 3000;\r\n    } else if (time < 5) {\r\n        bonus = 4000;\r\n    }\r\n    return bonus;\r\n}\r\n\r\nfunction score(distance,timeBonus) {\r\n    let points, result;\r\n    if (distance >= 200) {\r\n        points = 0;\r\n        timeBonus = 0;\r\n    } else if (distance < 200 && distance >= 100) {\r\n        points = 3000;\r\n    } else if (distance < 100 && distance >= 50) {\r\n        points = 5000;\r\n    } else if (distance < 50 && distance >= 20) {\r\n        points = 8000;\r\n    } else if (distance < 20) {\r\n        points = 10000;\r\n    }\r\n    result = points + timeBonus;\r\n    return result;\r\n}\r\n\r\nclass GameMain extends Component{\r\n    state={\r\n        gameState:1,\r\n        counter:0,\r\n        city:{},\r\n        score:0,\r\n        time:0,\r\n        play:true\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.targets=getRandomCity(cities,10);\r\n        let startTime=new Date();\r\n        startTime=startTime.getTime();\r\n        this.setState({city:this.targets[this.state.counter],time:startTime});\r\n    }\r\n\r\n    mapClicked=(mapProps, map, clickEvent)=> {\r\n            if(this.state.gameState===1) {\r\n                this.clickTime=new Date();\r\n                this.clickTime=this.clickTime.getTime();\r\n                this.playerTime = (this.clickTime-this.state.time)/1000;\r\n                this.clickedPlaceLat=clickEvent.latLng.lat();\r\n                this.clickedPlaceLng=clickEvent.latLng.lng();\r\n                this.distance=Math.floor(distance(this.state.city.lat, this.state.city.lng, this.clickedPlaceLat, this.clickedPlaceLng));\r\n                this.timeBonus=bonus(this.playerTime,this.distance);\r\n                this.points=score(this.distance,this.timeBonus);\r\n                this.prevCityName=this.state.city.name;\r\n                this.prevCityLat=this.state.city.lat;\r\n                this.prevCityLng=this.state.city.lng;\r\n\r\n                this.setState({\r\n                    gameState:0,\r\n                    city:{},\r\n                    counter:this.state.counter+1\r\n                });\r\n                this.Timeout = setTimeout(() => {\r\n                    if(this.state.counter===this.targets.length){\r\n                        this.setState({play:false,gameState:1, score: this.state.score + this.points,city:this.targets[this.state.counter]})}\r\n                        else{this.setState({gameState:1, score: this.state.score + this.points,time:this.clickTime+2000,city:this.targets[this.state.counter]});}\r\n                    clearTimeout(this.Timeout);}, 2000);\r\n            }\r\n    };\r\n    render(){\r\n        console.log('tttiem=>'+this.state.time)\r\n        let randCityCoordinates={lat: this.prevCityLat,lng:this.prevCityLng};\r\n        let clickedCityCoordinates={lat: this.clickedPlaceLat, lng: this.clickedPlaceLng};\r\n        let pathCoordinates = [{lat: this.clickedPlaceLat, lng: this.clickedPlaceLng}, {lat: this.prevCityLat,lng:this.prevCityLng}];\r\n        let info;\r\n        if(this.state.gameState===0) { info=<Info cityName={this.prevCityName} points={this.points} distance={this.distance} timeBonus={this.timeBonus}/>}\r\n        if(this.state.play) {\r\n                return (<>\r\n                    <section className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-1\"> </div>\r\n                            <div className=\"head col-15\">\r\n                                <GameHeader counter={this.state.counter} actCity={this.state.city.name} actPoints={this.state.score} />\r\n                            </div>\r\n                            <div className=\"col-2\"> </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"main col-17\">\r\n                                {info}\r\n                                <GoogleMapWrapper\r\n                                    handleClick={this.mapClicked}\r\n                                                  gameState={this.state.gameState}\r\n                                                  polyline={pathCoordinates}\r\n                                                  randCityMarker={randCityCoordinates}\r\n                                                  clickedCityMarker={clickedCityCoordinates}\r\n                                > </GoogleMapWrapper>\r\n                            </div>\r\n                            <div className=\"main-side col-1\">\r\n                                <GameSidebar gameState={this.state.gameState}/>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </>\r\n                    )\r\n        }else{\r\n            return(<EndGame score={this.state.score}/>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default GameMain;","import React from 'react';\nimport './App.scss';\nimport Menu from '../Menu/Menu';\nimport GameMain from '../GameMain/GameMain';\nimport {HashRouter,Route,Switch} from 'react-router-dom';\n\n\n\nfunction App() {\n  return (<>\n        <HashRouter>\n          <Switch>\n            <Route exact path='/' component={Menu} />\n            <Route path='/GameMain/' component={GameMain} />\n          </Switch>\n        </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the App load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web App is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different App. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your App to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}